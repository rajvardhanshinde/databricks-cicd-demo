name: Sync Notebooks → Databricks Workspace (per branch)

on:
  push:
    branches: [dev, ppe, main]
    paths:
      - "Notebooks/**"
      - "**/*.ipynb"
      - "**/*.py"
  workflow_dispatch: {}

concurrency:
  group: "dbx-sync-${{ github.ref_name }}"
  cancel-in-progress: true

jobs:
  sync:
    # dev branch → dev environment, ppe → ppe, main → prod
    environment: ${{ github.ref_name == 'main' && 'prod' || github.ref_name }}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # Install the NEW Databricks CLI
      - name: Install Databricks CLI (new)
        run: |
          curl -fsSL https://raw.githubusercontent.com/databricks/setup-cli/main/install.sh | sh
          which databricks
          databricks --version

      # Fail fast if any secret is missing
      - name: Validate secrets
        env:
          DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}
          DEST_PATH: ${{ secrets.DEST_PATH }}
        run: |
          set -euo pipefail
          : "${DATABRICKS_HOST:?Missing DATABRICKS_HOST}"
          : "${DATABRICKS_TOKEN:?Missing DATABRICKS_TOKEN}"
          : "${DEST_PATH:?Missing DEST_PATH}"
          echo "Destination: ${DEST_PATH}"

      # Sync the Notebooks folder into your workspace path
      - name: Import Notebooks to Databricks workspace
        env:
          DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}
          DEST_PATH: ${{ secrets.DEST_PATH }}
        run: |
          set -euo pipefail
          if [ ! -d "Notebooks" ]; then
            echo "No Notebooks/ folder in repo. Nothing to sync."
            exit 0
          fi

          # Make sure destination exists (workspace path, not URL, not DBFS)
          databricks workspace mkdirs "${DEST_PATH}"

          # Import notebooks (overwrite existing)
          databricks workspace import-dir --overwrite "Notebooks" "${DEST_PATH}"

          # Optional: list destination to verify
          databricks workspace ls "${DEST_PATH}"
          echo "✅ Synced Notebooks → ${DEST_PATH}"
